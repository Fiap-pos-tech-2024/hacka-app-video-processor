name: Build and Push Docker Image to ECR and Redeploy ECS - Video Processor

on:
  push:
    branches: [ main ]
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::816069165502:role/gh-actions-video-upload-service-role
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to ECR (no cache)
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: hacka-app-processor
          IMAGE_TAG: latest
        run: |
          echo "üîÅ For√ßando build sem cache para Video Processor..."
          aws ecr describe-repositories --repository-names $ECR_REPOSITORY --region us-east-1 || \
          aws ecr create-repository --repository-name $ECR_REPOSITORY --region us-east-1

          docker image rm $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG || true
          docker build --no-cache -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Force new ECS deployment
        run: |
          aws ecs update-service \
            --cluster microservices-cluster \
            --service video-processor \
            --force-new-deployment \
            --region us-east-1

      - name: Wait for service stability
        run: |
          echo "‚è≥ Aguardando estabilidade do servi√ßo..."
          aws ecs wait services-stable \
            --cluster microservices-cluster \
            --services video-processor \
            --region us-east-1
          echo "‚úÖ Servi√ßo Video Processor est√°vel!"

      - name: Verify ECS service status
        run: |
          echo "üîç Verificando status do servi√ßo ECS..."
          SERVICE_STATUS=$(aws ecs describe-services \
            --cluster microservices-cluster \
            --services video-processor \
            --region us-east-1 \
            --query "services[0].status" \
            --output text)
          
          RUNNING_COUNT=$(aws ecs describe-services \
            --cluster microservices-cluster \
            --services video-processor \
            --region us-east-1 \
            --query "services[0].runningCount" \
            --output text)
            
          DESIRED_COUNT=$(aws ecs describe-services \
            --cluster microservices-cluster \
            --services video-processor \
            --region us-east-1 \
            --query "services[0].desiredCount" \
            --output text)
          
          echo "üìä Status do servi√ßo: $SERVICE_STATUS"
          echo "üèÉ Tasks rodando: $RUNNING_COUNT/$DESIRED_COUNT"
          
          if [ "$RUNNING_COUNT" = "$DESIRED_COUNT" ] && [ "$SERVICE_STATUS" = "ACTIVE" ]; then
            echo "‚úÖ Processador de v√≠deo funcionando corretamente!"
          else
            echo "‚ö†Ô∏è  Aguardando todas as tasks ficarem prontas..."
          fi

      - name: Print service information
        run: |
          echo "üé¨ Video Processor (Queue Worker) - Informa√ß√µes do Deploy:"
          echo "üì¶ Cluster: microservices-cluster"
          echo "üîß Servi√ßo: video-processor"
          echo "üì¨ Fila SQS: video-processing-queue"
          echo "üóÇÔ∏è  Bucket S3: video-processor-storage-*"
          echo "‚ö° Tipo: Processador de fila (sem API HTTP)"

  deploy-notification:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: always()

    steps:
      - name: Deploy status notification
        run: |
          if [ "${{ needs.build-and-deploy.result }}" == "success" ]; then
            echo "üéâ Deploy do Video Processor realizado com sucesso!"
            echo "üöÄ O processador est√° rodando e monitorando a fila SQS."
            echo "üì¨ Processando mensagens da fila: video-processing-queue"
            echo "ÔøΩ O servi√ßo est√° extraindo frames dos v√≠deos automaticamente."
          else
            echo "‚ùå Falha no deploy do Video Processor."
            echo "üîç Verifique os logs do GitHub Actions para mais detalhes."
          fi
